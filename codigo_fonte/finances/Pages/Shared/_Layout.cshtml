<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - finances</title>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/forms.css" asp-append-version="true" />
</head>
<body>
    <header>
        <div class="header-left">
            <h1>Rennan's Finances</h1>
        </div>
        <div class="header-right">
            <a href=""><span>Total Faturas</span></a>
        </div>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        $(document).ready(function() {
            atualizarSelectInstituicoes();
            atualizarTabelaInstituicoes();
        });

        function formatarNumero(numero) {
            return numero.toFixed(2)                      
                .replace('.', ',')                         
                .replace(/\B(?=(\d{3})+(?!\d))/g, '.');   
        }

        function atualizarSelectInstituicoes() {
            $.ajax({
                url: '/Instituicao', 
                type: 'GET',
                dataType: 'json',
                success: function(data) {
                    console.log('Instituições carregadas:', data);

                    const instituicaoSelect = $('#instituicaoSelect');
                    instituicaoSelect.empty(); 

                    if (data.length === 0) {
                        $('#instituicaoMessage').show();
                        return;
                    }

                    $('#instituicaoMessage').hide();

                    data.forEach(function(instituicao) {
                        instituicaoSelect.append(
                            $('<option>').val(instituicao.id).text(instituicao.nome)
                        );
                    });

                    atualizarTabelaInstituicoes(data);
                },
                error: function(xhr, status, error) {
                    console.error("Erro ao carregar instituições:", error);
                }
            });
        }

        function atualizarTabelaInstituicoes(instituicoes) {
            const tbody = $('#instituicoesTableBody');
            tbody.empty(); 

            if (instituicoes.length === 0) {
                $('#totalSaldo').text('R$ 0,00');
                $('#totalFatura').text('R$ 0,00');
                return;
            }

            let totalSaldo = 0;
            let totalFatura = 0;

            instituicoes.forEach(function(instituicao) {
                const tr = $('<tr>');

                tr.append($('<td>').text(instituicao.nome));
                tr.append($('<td>').addClass('saldo').text('R$ ' + formatarNumero(instituicao.receita)));
                tr.append($('<td>').addClass('fatura').text('R$ ' + formatarNumero(instituicao.despesa)));

                tbody.append(tr);

                totalSaldo += instituicao.receita;
                totalFatura += instituicao.despesa;
            });

            $('#totalSaldo').text('R$ ' + formatarNumero(totalSaldo));
            $('#totalFatura').text('R$ ' + formatarNumero(totalFatura));
        }

        $('#instituicaoForm').submit(function(event) {
            event.preventDefault(); 

            const nome = $('#instituicao').val();

            if (!nome.trim()) {
                alert("O nome da instituição não pode estar vazio.");
                return;
            }

            $.ajax({
                url: '/Instituicao',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ nome: nome }),
                success: function(data) {
                    alert("Instituição criada com sucesso!");
                    atualizarSelectInstituicoes();
                },
                error: function(xhr, status, error) {
                    console.error("Erro ao criar instituição:", error);
                }
            });
        });

        $('#receitaDespesaForm').submit(function(event) {
            event.preventDefault();

            const instituicaoId = $('#instituicaoSelect').val();
            const tipoTransacao = $('#tipo-transacao').val();
            const quantidade = parseFloat($('#quantidade').val());
            const descricao = $('#descricao').val();
            const numeroParcelas = parseInt($('#numero-parcelas').val());

            if (!instituicaoId) {
                alert("Selecione uma instituição.");
                return;
            }

            if (!quantidade || quantidade <= 0) {
                alert("A quantidade deve ser um valor positivo.");
                return;
            }

            // DEPÓSITOS
            if (tipoTransacao === 'Depósito') {
                if(!descricao) {
                    alert('A descrição é obrigatória.');
                    return;
                }

                const depositosData = {
                    valor: quantidade,
                    descricao: descricao,
                    instituicaoId: parseInt(instituicaoId),
                };
                console.log(JSON.stringify(depositosData));

                $.ajax({
                    url: '/Depositos',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(depositosData),
                    success: function(response) {
                        alert("Depósito adicionado com sucesso!");
                        atualizarSelectInstituicoes();
                    },
                    error: function(xhr, status, error) {
                        console.error("Erro ao adicionar depósito:", error);
                        alert("Erro ao adicionar depósito. Tente novamente.");
                    }
                });

            // DÉBITOS
            } else if (tipoTransacao === "Débito") {
                if(!descricao) {
                    alert('A descrição é obrigatória.');
                    return;
                }

                const debitoData = {
                    valor: quantidade,
                    descricao: descricao,
                    instituicaoId: parseInt(instituicaoId),
                };

                $.ajax({
                    url: '/Debito',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(debitoData),
                    success: function(response) {
                        alert("Débito adicionado com sucesso!");
                        atualizarSelectInstituicoes();
                    },
                    error: function(xhr, status, error) {
                        console.error("Erro ao adicionar débito:", error);
                        alert("Erro ao adicionar débito. Tente novamente.");
                    }
                });

            // CRÉDITOS
            } else if (tipoTransacao === "Crédito") {
                if (!descricao) {
                    alert("A descrição da compra é obrigatória.");
                    return;
                }

                if (!numeroParcelas || numeroParcelas <= 0) {
                    alert("O número de parcelas deve ser um valor positivo.");
                    return;
                }

                const faturaData = {
                    valor: quantidade,
                    descricao: descricao,
                    quantidadeParcelas: numeroParcelas,
                    instituicaoId: parseInt(instituicaoId),
                };

                $.ajax({
                    url: '/Fatura',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(faturaData),
                    success: function(response) {
                        alert("Fatura de crédito adicionada com sucesso!");
                        atualizarSelectInstituicoes();
                    },
                    error: function(xhr, status, error) {
                        console.error("Erro ao adicionar fatura de crédito:", error);
                        alert("Erro ao adicionar a fatura de crédito. Tente novamente.");
                    }
                });
            }
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
